1 - first make laravel projects
2 - make your table like : php artisan make:migration YOUR_TABLE_NAME
3 - in database/migrations/YOUR_TABLE_NAME you can set your columns
4 - make Entity for your table like: php artisan make:model YOUR_MODEL_NAME
	than in this model class set it to database like: protected $table = 'your_table_name'
	than add your table columns in it like: protected $fillable = ['column_name1','column_name2', ...]
5 - make resources for your table (for api need) like: php artisan make:resource YOUR_RESOURCE_NAME
6 - in made resource in last step we make json, in toArray function should wrtie code like:
	return [
		'column_name_1' => $this->column_1 ,
		'column_name_1' => $this->column_2 ,
		...
	]
7 - make your controller in terminal like : php artisan make:controller YOUR_CONTROLLER_NAME
8 - make your roots in roots/api.php, somethig like this:
	Route::METHOD('/YOUR_ROUT_NAME', 'YOUR_CONTROLLER_NAME@CONTOLLER_FUNCTION');
 * hint 1 :
   METHOD is:  
	(get -> for show)
	(post -> for insert)
	(put -> for update)
	(delete -> for delete)
 * hint 2 :
   $id param in get,put,delete or any get method param in rout should define like : 
	Route::METHOD('/YOUR_ROUT_NAME/{param_name}', 'YOUR_CONTROLLER_NAME@CONTOLLER_FUNCTION');
9 - make function for your CURD operations in your controller like:
 * insert:
	public function store(Request $request){
		$object_name = new YOUR_MODEL_NAME;
		
		$object_name->column1 = $request->input('param_name_1');
		$object_name->column2 = $request->input('param_name_2');
		...
		$object_name->save();
		return new YOUR_RESOURCE_NAME($object_name);
	}
 * show:
	public function show(){
		$object_name = YOUR_MODEL_NAME::all();
		return YOUR_RESOURCE_NAME::collection($object_name);
	}
	public function showById($id){
		$object_name = YOUR_MODEL_NAME::find($id);
		return new YOUR_RESOURCE_NAME($object_name);
	}
 * update: 
	public function update(Request $request, $id){
		$object_name = YOUR_MODEL_NAME::find($id);
		
		$object_name->column1 = $request->input('param_name_1');
		$object_name->column2 = $request->input('param_name_2');
		...
		$object_name->save();
		return new YOUR_RESOURCE_NAME($object_name);
	}
 * delete:
	public function delete($id){
		$object_name = YOUR_MODEL_NAME::find($id);
		$object_name->delete();
		return new YOUR_RESOURCE_NAME($object_name);
	}

* model content: 

class MODEL_NAME extends Model {
    protected $table = 'x';

    public function x(){
        return $this->belongsTo('App\x','x');
    }

    public function x(){
        return $this->hasMany('App\x', 'x');
    }

    protected $fillable = [
        'id',
        'x',
        'x',
        'x',
        'x',
        'x',
        'x',
        'x',
        'created_at',
        'updated_at',
    ];
    
}
